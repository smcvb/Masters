package types;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;

import org.apache.hadoop.io.WritableComparable;

/**
 * Object containing a type value as an integer and a Point.
 * Used to communicate in the Hama version of K-Means Clustering
 * @author stevenb
 * @date 29-07-2013
 */
public class PointMessage implements WritableComparable<PointMessage> {
	
	private int type;
	private Point point;
	
	public PointMessage(int type, Point point) {
		this.type = type;
		this.point = point;
	}
	
	public PointMessage() {
		this(0, null);
	}
	
	public int getType() {
		return type;
	}
	
	public void setType(int type) {
		this.type = type;
	}
	
	public Point getPoint() {
		return point;
	}
	
	public void setPoint(Point point) {
		this.point = point;
	}
	
	@Override
	public String toString() {
		return type + " " + point.toString();
	}
	
	@Override
	public void readFields(DataInput in) throws IOException {
		in.readInt();
		point.readFields(in);
	}
	
	@Override
	public void write(DataOutput out) throws IOException {
		out.writeInt(type);
		point.write(out);
	}
	
	@Override
	public int compareTo(PointMessage other) {
		int cmp = type - other.getType();
		if (cmp != 0) {
			return cmp;
		}
		return point.compareTo(other.getPoint());
	}
	
}
