package nl.vu.cs.cn;

/**
 * @author Steven van Beelen, 1821806
 * and Gerben Rozie, 1821954
 *
 * Class for the TCP Control Block, containing all the 
 * relevant information concerning a connection
 */
public class TCB {
	
	public static final int BUF_SIZE = 7968; //Max packet size is 8000, thus the data buffer size is 8000 - 20(TCP Header) - 12(Pseudo IP Header) = 7968 
	
	public IP.IpAddress src_ipaddr;
	public IP.IpAddress dest_ipaddr;
	public short src_port;
	public short dest_port;
	public int src_seqnum;
	public int dest_seqnum;
	public int expected_acknum;
	public int isseqnum;
	public int irseqnum;
	public byte data[];
	public byte packet_data[];
	public int data_left;
	public ConnectionState state;
	
	/**
	 * Construct a Transmission Control Block
	 * 
	 * @param src_ipaddr: Source IP address
	 * @param dest_ipaddr: Destination IP address
	 * @param src_port: Source port number
	 * @param dest_port: Destination port number
	 * @param src_seqnum: Source sequence number
	 * @param dest_seqnum: Destination sequence number
	 * @param expected_acknum: Acknowledgment expected from destination
	 * @param isseqnum: Initial Sender Sequence Number
	 * @param irseqnum: Initial Receiver Sequence Number
	 * @param data: Buffer with received packet
	 * @param packet_data: Data to be delivered
	 * @param data_left: Bytes left to be delivered
	 * @param state: Current state of the connection
	 */
	public TCB(IP.IpAddress src_ipaddr, IP.IpAddress dest_ipaddr, short src_port, short dest_port,
			int src_seqnum, int dest_seqnum, int expected_acknum,
			int isseqnum, int irseqnum,
			byte data[], byte packet_data[], int data_left, ConnectionState state) {
		this.src_ipaddr = src_ipaddr;
		this.dest_ipaddr = dest_ipaddr;
		this.src_port = src_port;
		this.dest_port = dest_port;
		this.src_seqnum = src_seqnum;
		this.dest_seqnum = dest_seqnum;
		this.expected_acknum = expected_acknum;
		this.isseqnum = isseqnum;
		this.irseqnum = irseqnum;
		this.data = data;
		this.packet_data = packet_data;
		this.data_left = data_left;
		this.state = state;
	}
	
	/**
	 * Construct a Transmission Control Block with the given IpAddress
	 * 
	 * @param ip: Source ip address of the TCP Stack
	 */
	public TCB(IP.IpAddress ip) {
		this(ip, IP.IpAddress.getAddress(0), (short) 0, (short) 0, 0, 0, 0, 0, 0, new byte[BUF_SIZE], new byte[BUF_SIZE], 0, ConnectionState.CLOSED);
	}
	
	/**
	 * Default Transmission Control Block constructor
	 */
	public TCB() {
		this(IP.IpAddress.getAddress(0), IP.IpAddress.getAddress(0), (short) 0, (short) 0, 0, 0, 0, 0, 0, new byte[0], new byte[0], 0, ConnectionState.CLOSED);
	}
	
	/**
	 * Reset all Transmission control block data
	 *  to 0/null, except for the src_ipaddr
	 */
	public void clean() {
		dest_ipaddr = IP.IpAddress.getAddress(0);
		src_port = (short) 0;
		dest_port = (short) 0;
		src_seqnum = 0;
		dest_seqnum = 0;
		expected_acknum = 0;
		isseqnum = 0;
		irseqnum = 0;
		data = new byte[0];
		packet_data = new byte[0];;
		data_left = 0;
		state = ConnectionState.CLOSED;
	}
}
